/*
 * Copyright (c) 2015-2016, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 *  ======== package.bld ========
 */

var Build = xdc.useModule('xdc.bld.BuildEnvironment');
var Pkg = xdc.useModule('xdc.bld.PackageContents');

Pkg.otherFiles = [
    "httpcli.h",
    "http2cli.h",
    "httpstd.h",
    "http2std.h",
    "http2hdr.h",
    "http2utils.h",
    "hpack.h",
    "huffman.h",
    "Http.xml",
    "package.bld"
];

/* lib/ is a generated directory that 'xdc clean' should remove */
Pkg.generatedFiles.$add("lib/");

var SRCS = [
    "httpcli.c",
    "httpstd.c",
];

var http2Srcs = [
    "http2cli.c",
    "http2hdr.c",
    "http2utils.c",
    "hpack.c",
    "huffman.c",
];

for (var i = 0; i < Build.targets.length; i++) {
    var target = Build.targets[i];

    for (var profile in target.profiles) {

        if (target.os == "Linux") {
            Pkg.addLibrary("lib/http", target, {
                profile: profile
            }).addObjects(SRCS.concat(http2Srcs));
        }
        else {

            target.$orig.ccOpts.prefix += pthreadIncs;

            if (slIncs != "") {
                Pkg.addLibrary("lib/http_sl", target, {
                    profile: profile,
                    defs: "-DNET_SL -D__TIRTOS__",
                    incs: slIncs
                }).addObjects(SRCS.concat(http2Srcs));
            }

            if (ndkIncs != "") {
                Pkg.addLibrary("lib/http_ndk", target, {
                    profile: profile,
                    defs: "-DNET_NDK -D__TIRTOS__",
                    incs: ndkIncs
                }).addObjects(SRCS.concat(http2Srcs));
            }
        }

        /* Expecting a single profile */
        break;
    }
}

Pkg.attrs.exportSrc = true;
